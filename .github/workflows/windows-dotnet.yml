name: .NET Build, Test and Report

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1

    - name: Restore NuGet packages
      run: nuget restore WindowsApp.sln

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3.1

    - name: Build solution with debug symbols
      run: msbuild WindowsApp.sln /p:Configuration=Release /p:DebugType=Full

    - name: Install VSTest Console
      uses: darenm/Setup-VSTest@v1

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Run tests with proper coverage collection
      run: |
        $testDll = Get-ChildItem -Recurse -Filter "ConverterApp.Tests.dll" | Select-Object -First 1
        $resultsDir = "TestResults"
        $coverageDir = "CoverageResults"
        
        mkdir $resultsDir -Force
        mkdir $coverageDir -Force
        
        # Create runsettings file dynamically
        @"
<?xml version="1.0" encoding="utf-8"?>
  <RunSettings>
    <DataCollectionRunSettings>
      <DataCollectors>
        <DataCollector friendlyName="Code Coverage" uri="datacollector://Microsoft/CodeCoverage/2.0" assemblyQualifiedName="Microsoft.VisualStudio.Coverage.DynamicCoverageDataCollector, Microsoft.VisualStudio.TraceCollector, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
          <Configuration>
            <CodeCoverage>
              <ModulePaths>
                <Include>
                  <ModulePath>.*ConverterApp\.dll$</ModulePath>
                </Include>
                <Exclude>
                  <ModulePath>.*Tests\.dll$</ModulePath>
                  <ModulePath>.*Test\.dll$</ModulePath>
                </Exclude>
              </ModulePaths>
              <UseVerifiableInstrumentation>True</UseVerifiableInstrumentation>
              <AllowLowIntegrityProcesses>True</AllowLowIntegrityProcesses>
              <CollectFromChildProcesses>True</CollectFromChildProcesses>
            </CodeCoverage>
          </Configuration>
        </DataCollector>
      </DataCollectors>
    </DataCollectionRunSettings>
  </RunSettings>
"@ | Out-File -FilePath "CodeCoverage.runsettings" -Encoding utf8

        # Run tests with coverage
        vstest.console.exe $testDll.FullName `
          /Logger:trx `
          /ResultsDirectory:$resultsDir `
          /Settings:CodeCoverage.runsettings `
          /EnableCodeCoverage

        # Find and convert the coverage file
        $coverageFile = Get-ChildItem -Recurse -Filter "*.coverage" | Select-Object -First 1
        if ($null -ne $coverageFile) {
          reportgenerator `
            -reports:"$($coverageFile.FullName)" `
            -targetdir:$coverageDir `
            -reporttypes:Cobertura
        } else {
          Write-Error "No coverage file was generated"
          exit 1
        }

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: CoverageReport
        path: CoverageResults/Cobertura.xml

    - name: Display coverage results
      run: |
        $coverageFile = "CoverageResults/Cobertura.xml"
        if (Test-Path $coverageFile) {
          [xml]$coverageXml = Get-Content -Path $coverageFile
          $coveredLines = [double]$coverageXml.coverage.'line-rate' * 100
          Write-Host "Code Coverage: $coveredLines%"
        } else {
          Write-Error "Coverage report not found"
          exit 1
        }

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: windows-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3.1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
  
    - name: Restore NuGet packages
      run: nuget restore WindowsApp.sln      

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: csharp

    - name: Build code
      run: msbuild WindowsApp.sln /p:Configuration=Release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
